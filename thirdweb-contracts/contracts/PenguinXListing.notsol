// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.9;

import "@openzeppelin/contracts/utils/Counters.sol";
import "@openzeppelin/contracts/utils/math/SafeMath.sol";


contract PenguinXListing {
    using Counters for Counters.Counter;
    using SafeMath for uint256;

    // Counters.Counter private _tokenIdCounter;
    address public owner;       // Address of user who created this listing
    uint256 price;              // USDC tokens
    address public verifier;    // Address of verifier profile that approved this post

    enum ListingStatus {
        PendingListingVerification,
        Listed,
        Unlisted
    }

    modifier onlyOwner {
      require(msg.sender == owner);
      _;
    }
    
    constructor(
        address _owner,
        string _name,
        string _description,
        uint96 _price,
        bytes32 _ipfs_cid
    ) {
        owner = _owner;
        name = _name;
        description = _description;
        price = _price;
        ipfs_cid = _ipfs_cid;
    }

    function pause() public onlyOwner {
        require(verifier != address(0), 'UNVERIFIED');
        status = ListingStatus.Unlisted;
    }

    function unpause() public onlyOwner {
        require(verifier != address(0), 'UNVERIFIED');
        status = ListingStatus.Unlisted;
    }
}